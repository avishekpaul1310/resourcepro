# Generated by Django 4.2.6 on 2025-06-17 12:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0003_alter_project_options_project_budget'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('resources', '0004_timeentry_is_billable'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardAIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('daily_briefing', 'Daily Briefing'), ('risk_assessment', 'Risk Assessment'), ('recommendations', 'Recommendations')], max_length=20)),
                ('analysis_data', models.JSONField(default=dict)),
                ('summary', models.TextField()),
                ('risks', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['analysis_type', 'created_at'], name='dashboard_d_analysi_02c3ca_idx'), models.Index(fields=['is_active', 'created_at'], name='dashboard_d_is_acti_0c60e8_idx')],
            },
        ),
        migrations.CreateModel(
            name='NLIQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.TextField()),
                ('intent', models.CharField(blank=True, max_length=100)),
                ('entities', models.JSONField(default=dict)),
                ('response_data', models.JSONField(default=dict)),
                ('response_text', models.TextField(blank=True)),
                ('execution_time', models.FloatField(default=0.0)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='dashboard_n_user_id_fe42ff_idx'), models.Index(fields=['intent', 'success'], name='dashboard_n_intent_f9adad_idx')],
            },
        ),
        migrations.CreateModel(
            name='InterventionScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario_type', models.CharField(choices=[('reassignment', 'Task Reassignment'), ('overtime', 'Overtime Authorization'), ('resource_addition', 'Additional Resource'), ('deadline_extension', 'Deadline Extension'), ('scope_reduction', 'Scope Reduction')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('simulation_data', models.JSONField(default=dict)),
                ('predicted_outcome', models.JSONField(default=dict)),
                ('estimated_impact', models.TextField()),
                ('success_probability', models.FloatField(default=0.0)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estimated_time_impact', models.IntegerField(blank=True, help_text='Impact in hours', null=True)),
                ('status', models.CharField(choices=[('simulated', 'Simulated'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='simulated', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('related_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.resource')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.task')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['scenario_type', 'status'], name='dashboard_i_scenari_063fab_idx'), models.Index(fields=['related_project', 'created_at'], name='dashboard_i_related_eb3705_idx')],
            },
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('bottleneck', 'Resource Bottleneck'), ('deadline_risk', 'Deadline Risk'), ('overallocation', 'Overallocation Warning'), ('underutilization', 'Underutilization Alert'), ('skill_gap', 'Skill Gap Identified'), ('opportunity', 'Optimization Opportunity')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('recommended_actions', models.JSONField(default=list)),
                ('data_context', models.JSONField(default=dict)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affected_projects', models.ManyToManyField(blank=True, to='projects.project')),
                ('affected_resources', models.ManyToManyField(blank=True, to='resources.resource')),
                ('affected_tasks', models.ManyToManyField(blank=True, to='projects.task')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-severity', '-created_at'],
                'indexes': [models.Index(fields=['insight_type', 'severity', 'is_active'], name='dashboard_a_insight_b2e34a_idx'), models.Index(fields=['is_active', 'created_at'], name='dashboard_a_is_acti_4d0276_idx')],
            },
        ),
    ]
