#!/usr/bin/env python
"""
Test script to verify that AI search functionality is now available on all pages
"""
import os
import sys
import django
import webbrowser
import time

# Add the project directory to Python path
project_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.append(project_dir)

# Setup Django environment
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'resourcepro.settings')
django.setup()

def test_global_search():
    print("üîç GLOBAL AI SEARCH TEST")
    print("=" * 60)
    
    # Test URLs - pages where search should now work
    test_pages = [
        {
            "name": "Dashboard",
            "url": "http://127.0.0.1:8000/dashboard/",
            "description": "Original working page"
        },
        {
            "name": "Projects",
            "url": "http://127.0.0.1:8000/projects/",
            "description": "Should now have AI search"
        },
        {
            "name": "Resources",
            "url": "http://127.0.0.1:8000/resources/",
            "description": "Should now have AI search"
        },
        {
            "name": "Allocation",
            "url": "http://127.0.0.1:8000/allocation/",
            "description": "Should now have AI search"
        },
        {
            "name": "Analytics",
            "url": "http://127.0.0.1:8000/analytics/",
            "description": "Should now have AI search"
        }
    ]
    
    print("üìã MANUAL TEST INSTRUCTIONS:")
    print("After opening each page, test the following:")
    print("1. ‚úÖ Search bar is visible in the header")
    print("2. ‚úÖ Microphone icon is present and clickable")
    print("3. ‚úÖ Type a query like 'Who is available for a new project?'")
    print("4. ‚úÖ Press Enter and verify you get AI results")
    print("5. ‚úÖ Click microphone icon and test voice search")
    print("6. ‚úÖ Check browser console (F12) for JavaScript errors")
    print()
    
    # Check if server is running
    try:
        import requests
        response = requests.get('http://127.0.0.1:8000/', timeout=5)
        print("‚úÖ Server is running")
    except Exception as e:
        print(f"‚ùå Server not accessible: {e}")
        print("Please start the Django server with: python manage.py runserver")
        return
    
    print("\nüåê Opening test pages...")
    
    for i, page in enumerate(test_pages):
        print(f"\nüìñ Opening {page['name']} ({page['description']})")
        print(f"üîó URL: {page['url']}")
        
        try:
            webbrowser.open(page['url'])
            print(f"‚úÖ Opened {page['name']}")
            
            if i < len(test_pages) - 1:
                print("‚è±Ô∏è  Waiting 3 seconds before opening next page...")
                time.sleep(3)
                
        except Exception as e:
            print(f"‚ùå Failed to open {page['name']}: {e}")
    
    print("\n" + "=" * 60)
    print("üß™ TESTING CHECKLIST")
    print("=" * 60)
    
    print("\nFor EACH page you just opened, verify:")
    print("‚ñ° Search bar appears in header")
    print("‚ñ° Microphone icon is visible")
    print("‚ñ° Text search works (try: 'show me available resources')")
    print("‚ñ° Voice search works (click mic, speak query)")
    print("‚ñ° Results appear in dropdown below search bar")
    print("‚ñ° No JavaScript errors in browser console")
    
    print("\nüéØ SUCCESS CRITERIA:")
    print("‚úÖ All 5 pages should have identical search functionality")
    print("‚úÖ Voice and text search should work on every page")
    print("‚úÖ Same AI responses regardless of which page you're on")
    
    print("\nüìù WHAT WAS FIXED:")
    print("- Added ai_dashboard.js to base template (global loading)")
    print("- Removed duplicate loading from dashboard template")
    print("- Search interface was already global via header.html")
    print("- Now JavaScript functionality matches global availability")
    
    print("\n‚úÖ Test completed! Please verify functionality on all pages.")

if __name__ == "__main__":
    test_global_search()
